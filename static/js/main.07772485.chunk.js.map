{"version":3,"sources":["Components/TitlePut.js","Components/Loader.js","Components/Section.js","Components/Poster.js","api.js","Routes/Home.js","Routes/TV.js","Components/Message.js","Routes/Search.js","Components/Header.js","Routes/Detail.js","Routes/Collection.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","props","document","title","length","substring","role","aria-label","icon","faSpinner","spin","TitlePut","Title","span","Grid","Section","children","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","PosterToCollection","PosterSeason","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","Home","useState","nowPlaying","setNowPlaying","upcoming","setUpcoming","popular","setPopular","loading","setLoading","useEffect","a","data","results","console","error","message","getMoviesApi","Loader","map","movie","poster_path","vote_average","release_date","TV","topRated","setTopRated","airingToday","setAiringToday","getTvApi","show","name","first_air_date","Text","color","Message","text","Form","Input","Search","movieResults","setMovieResults","tvResults","setTvResults","searchTerm","setSearchTerm","setError","searchByTerm","log","onSubmit","event","preventDefault","placeholder","onChange","value","target","yaer","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","faFilm","size","faTv","faSearch","Content","Cover","bgImage","Data","h3","ItemContainer","ImdbImg","Divider","Overview","p","Backdrop","Tab","TabTitle","Videos","SReactPlayer","ReactPlayer","ProductionImg","Detail","result","setResult","videos","setVideos","includes","match","push","history","parsedId","parseInt","isNaN","getDetail","backdrop_path","production_companies","company","index","logo_path","runtime","episode_run_time","genres","genre","rel","href","imdb_id","overview","video","url","key","controls","width","height","seasons","season","air_date","belongs_to_collection","collection","setCollection","getCollection","parts","part","path","exact","component","Collection","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.07772485.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: none;\n`;\nexport default (props) => (\n  <Container>\n    {\n      (document.title = `${\n        props.title.length > 20\n          ? `${props.title.substring(0, 20)}...`\n          : props.title\n      }`)\n    }\n  </Container>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport TitlePut from \"Components/TitlePut\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      <FontAwesomeIcon icon={faSpinner} spin={true} />\n    </span>\n    <TitlePut title=\"Loading...\" />\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title> {title} </Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  border-radius: 10px;\n  background-size: cover;\n  background-position: center center;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nexport const Poster = ({\n  id,\n  imageUrl,\n  title,\n  rating,\n  year,\n  isMovie = false,\n}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : \"https://www.lakeshorechamber.org/wp-content/uploads/2018/07/Photo-Not-Available.png\"\n          }\n        />\n        {rating ? (\n          <Rating>\n            <span role=\"img\" aria-label=\"rating\">\n              ⭐\n            </span>{\" \"}\n            {rating}/10\n          </Rating>\n        ) : null}\n      </ImageContainer>\n      <Title>\n        {title.length > 17 ? `${title.substring(0, 17)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nexport const PosterToCollection = ({ id, imageUrl, title, year }) => (\n  <Link to={`/collection/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : \"https://www.lakeshorechamber.org/wp-content/uploads/2018/07/Photo-Not-Available.png\"\n          }\n        />\n      </ImageContainer>\n      <Title>\n        {title.length > 17 ? `${title.substring(0, 17)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nexport const PosterSeason = ({ imageUrl, title, year }) => (\n  <Container>\n    <ImageContainer>\n      <Image\n        bgUrl={\n          imageUrl\n            ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n            : \"https://www.lakeshorechamber.org/wp-content/uploads/2018/07/Photo-Not-Available.png\"\n        }\n      />\n    </ImageContainer>\n    <Title>{title.length > 17 ? `${title.substring(0, 17)}...` : title}</Title>\n    <Year>{year}</Year>\n  </Container>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"efe03a6d3db809fae4ff34eeb880e298\",\n    language: \"en-EN\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  getVideos: (id) => api.get(`movie/${id}/videos`),\n  collection: (id) => api.get(`collection/${id}`),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  getVideos: (id) => api.get(`tv/${id}/videos`),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\n//axios, append_to_response부분 , encodeURIComponent...더 공부할 것\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport { Poster } from \"Components/Poster\";\nimport TitlePut from \"Components/TitlePut\";\nimport { moviesApi } from \"api\";\n\nconst Container = styled.div`\n  position: absolute;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst Home = () => {\n  const [nowPlaying, setNowPlaying] = useState([]);\n  const [upcoming, setUpcoming] = useState([]);\n  const [popular, setPopular] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getMoviesApi = async () => {\n      try {\n        const {\n          data: { results: nowPlaying },\n        } = await moviesApi.nowPlaying();\n        const {\n          data: { results: upcoming },\n        } = await moviesApi.upcoming();\n        const {\n          data: { results: popular },\n        } = await moviesApi.popular();\n        setNowPlaying(nowPlaying);\n        setUpcoming(upcoming);\n        setPopular(popular);\n      } catch (error) {\n        console.error(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMoviesApi();\n  }, []);\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Section title=\"Now Playing\">\n        {nowPlaying.map((movie) => (\n          <Poster\n            key={movie.id}\n            id={movie.id}\n            title={movie.title}\n            imageUrl={movie.poster_path}\n            rating={movie.vote_average}\n            year={movie.release_date && movie.release_date.substring(0, 4)}\n            isMovie={true}\n          />\n        ))}\n      </Section>\n      <Section title=\"Upcoming\">\n        {upcoming.map((movie) => (\n          <Poster\n            key={movie.id}\n            id={movie.id}\n            title={movie.title}\n            imageUrl={movie.poster_path}\n            rating={movie.vote_average}\n            year={movie.release_date && movie.release_date.substring(0, 4)}\n            isMovie={true}\n          />\n        ))}\n      </Section>\n      <Section title=\"Popular\">\n        {popular.map((movie) => (\n          <Poster\n            key={movie.id}\n            id={movie.id}\n            title={movie.title}\n            imageUrl={movie.poster_path}\n            rating={movie.vote_average}\n            year={movie.release_date && movie.release_date.substring(0, 4)}\n            isMovie={true}\n          />\n        ))}\n      </Section>\n      <TitlePut title=\"Movies | Movistagram\" />\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport { Poster } from \"Components/Poster\";\nimport TitlePut from \"Components/TitlePut\";\nimport { tvApi } from \"api\";\n\nconst Container = styled.div`\n  position: absolute;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst TV = () => {\n  const [topRated, setTopRated] = useState([]);\n  const [popular, setPopular] = useState([]);\n  const [airingToday, setAiringToday] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const getTvApi = async () => {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      setTopRated(topRated);\n      setPopular(popular);\n      setAiringToday(airingToday);\n    } catch (e) {\n      console.error(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getTvApi();\n  }, []);\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Section title=\"Top rated\">\n        {topRated.map((show) => (\n          <Poster\n            key={show.id}\n            id={show.id}\n            title={show.name}\n            imageUrl={show.poster_path}\n            rating={show.vote_average}\n            year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            isMovie={false}\n          />\n        ))}\n      </Section>\n      <Section title=\"Popular\">\n        {popular.map((show) => (\n          <Poster\n            key={show.id}\n            id={show.id}\n            title={show.name}\n            imageUrl={show.poster_path}\n            rating={show.vote_average}\n            year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            isMovie={false}\n          />\n        ))}\n      </Section>\n      <Section title=\"On air Today\">\n        {airingToday.map((show) => (\n          <Poster\n            key={show.id}\n            id={show.id}\n            title={show.name}\n            imageUrl={show.poster_path}\n            rating={show.vote_average}\n            year={show.first_air_date && show.first_air_date.substring(0, 4)}\n            isMovie={false}\n          />\n        ))}\n      </Section>\n      <TitlePut title=\"TV Shows | Movistagram\" />\n    </Container>\n  );\n};\n\nexport default TV;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  font-weight: 600;\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}> {text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import { moviesApi, tvApi } from \"api\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport { Poster } from \"Components/Poster\";\nimport Message from \"Components/Message\";\nimport TitlePut from \"Components/TitlePut\";\n\nconst Container = styled(\"div\")`\n  width: 100%;\n  padding: 20px;\n`;\nconst Form = styled(\"form\")`\n  margin-bottom: 50px;\n  width: 100%;\n`;\nconst Input = styled(\"input\")`\n  all: unset;\n  width: 100%;\n  font-size: 28px;\n`;\n\nconst Search = () => {\n  const [movieResults, setMovieResults] = useState(null);\n  const [tvResults, setTvResults] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (searchTerm !== \"\") {\n      searchByTerm();\n      //   console.log(searchTerm);\n    }\n  };\n\n  const updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSearchTerm(value);\n  };\n\n  const searchByTerm = async () => {\n    setLoading(true);\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      setMovieResults(movieResults);\n      setTvResults(tvResults);\n    } catch (e) {\n      console.log(e);\n      setError(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows...\"\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map((movie) => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  yaer={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show Results\">\n              {tvResults.map((show) => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#ee5253\" text={error} />}\n          {tvResults &&\n            movieResults &&\n            tvResults.length === 0 &&\n            movieResults.length === 0 && (\n              <Message text=\"Nothing found\" color=\"#8395a7\" />\n            )}\n        </>\n      )}\n      <TitlePut title=\"Search | Movistagram\" />\n    </Container>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilm, faTv, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Header = styled.header`\n  color: rgba(255, 255, 255);\n  position: fixed;\n  font-size: 10px;\n  z-index: 10;\n  top: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0px 20px;\n\n  background-color: rgba(20, 20, 20, 0.9);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 100px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#ff0000\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-evenly;\n  height: 50px;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">\n          <FontAwesomeIcon icon={faFilm} size=\"3x\" />\n        </SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">\n          <FontAwesomeIcon icon={faTv} size=\"2x\" />\n        </SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">\n          <FontAwesomeIcon\n            icon={faSearch}\n            size=\"2x\"\n            spin={pathname === \"/search\"}\n          />\n        </SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import Loader from \"Components/Loader\";\nimport styled from \"styled-components\";\nimport { moviesApi, tvApi } from \"api\";\nimport React, { useState, useEffect } from \"react\";\nimport TitlePut from \"Components/TitlePut\";\nimport ReactPlayer from \"react-player/youtube\";\nimport { Link } from \"react-router-dom\";\nimport Section from \"Components/Section\";\nimport { PosterToCollection, PosterSeason } from \"Components/Poster\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  background-image: url(${(props) => props.bgImage});\n  background-size: 100%;\n  width: 30%;\n  height: auto;\n  border-radius: 15px;\n  :hover {\n    opacity: 0.5;\n    transition: opacity 0.2s ease-in-out;\n  }\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  height: 100%;\n  overflow-y: scroll;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  display: flex;\n  justify-content: space-between;\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\nconst ItemContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px 0px;\n`;\nconst Item = styled.span`\n  display: flex;\n  align-items: center;\n`;\nconst ImdbImg = styled.span`\n  background-image: url(\"http://img4.wikia.nocookie.net/__cb20130124112826/logopedia/images/8/8e/IMDB.png\");\n  background-size: cover;\n  background-position: center center;\n  width: 42px;\n  height: 20px;\n  display: inline-block;\n  border-radius: 5px;\n  :hover {\n    opacity: 0.5;\n    transition: opacity 0.2s ease-in-out;\n  }\n`;\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.8;\n  line-height: 1.5;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\nconst Tab = styled.div`\n  margin-bottom: 20px;\n`;\nconst TabTitle = styled.div`\n  font-weight: 600;\n  font-size: 15px;\n  margin-bottom: 25px;\n  margin-top: 30px;\n`;\nconst Videos = styled.div`\n  display: flexbox;\n  flex-wrap: nowrap;\n  width: 100%;\n  overflow-x: auto;\n  overflow-y: hidden;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst SReactPlayer = styled(ReactPlayer)`\n  margin-right: 10px;\n  &:hover {\n    opacity: 0.7;\n    transition: opacity 0.2s ease-in-out;\n  }\n`;\n\nconst ProductionImg = styled.div`\n  background-image: url(${(props) => props.bgImage});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 100px;\n  height: 30px;\n  margin-right: 10px;\n`;\nconst CollectionTab = styled.div`\n  display: flex;\n`;\nconst CollectionPoster = styled.div`\n  background-image: url(${(props) => props.bgImage});\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n  width: 120px;\n  height: 180px;\n  border-radius: 10px;\n  margin-right: 20px;\n  :hover {\n    opacity: 0.5;\n    transition: opacity 0.2s ease-in-out;\n  }\n`;\n\nconst Detail = (props) => {\n  const {\n    location: { pathname },\n  } = props;\n\n  const [result, setResult] = useState(null);\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const isMovie = pathname.includes(\"/movie/\");\n\n  useEffect(() => {\n    const getDetail = async () => {\n      const {\n        match: {\n          params: { id },\n        },\n        history: { push },\n      } = props;\n      const parsedId = parseInt(id);\n\n      if (isNaN(parsedId)) {\n        return push(\"/\");\n      }\n\n      try {\n        if (isMovie) {\n          const { data: result } = await moviesApi.movieDetail(parsedId);\n          const {\n            data: { results: videos },\n          } = await moviesApi.getVideos(parsedId);\n          setResult(result);\n          setVideos(videos);\n        } else {\n          const { data: result } = await tvApi.showDetail(parsedId);\n          const {\n            data: { results: videos },\n          } = await tvApi.getVideos(parsedId);\n          setResult(result);\n          setVideos(videos);\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getDetail();\n  }, []);\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\n              : \"https://www.lakeshorechamber.org/wp-content/uploads/2018/07/Photo-Not-Available.png\"\n          }\n        />\n        <Data>\n          <Title>\n            {result.title ? result.title : result.name}\n            {result.production_companies &&\n              result.production_companies.length > 0 &&\n              result.production_companies.map(\n                (company, index) =>\n                  company.logo_path && (\n                    <ProductionImg\n                      key={index}\n                      bgImage={`https://image.tmdb.org/t/p/original/${company.logo_path}`}\n                    />\n                  )\n              )}\n          </Title>\n          <ItemContainer>\n            {(result.release_date || result.first_air_date) && (\n              <>\n                <Item>\n                  {result.release_date\n                    ? result.release_date.substring(0, 4)\n                    : result.first_air_date.substring(0, 4)}\n                </Item>\n                <Divider>#</Divider>\n              </>\n            )}\n            {(result.runtime || result.episode_run_time) && (\n              <>\n                <Item>\n                  {result.runtime ? result.runtime : result.episode_run_time}{\" \"}\n                  min\n                </Item>\n                <Divider>#</Divider>\n              </>\n            )}\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>#</Divider>\n            {isMovie && (\n              <Item>\n                <a\n                  rel=\"noreferrer\"\n                  target=\"_blank\"\n                  href={`https://www.imdb.com/title/${result.imdb_id}`}\n                >\n                  <ImdbImg />\n                </a>\n              </Item>\n            )}\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n          {videos && videos.length > 0 && (\n            <Tab>\n              <TabTitle>Traillers</TabTitle>\n              <Videos>\n                {videos.map((video, index) => (\n                  <SReactPlayer\n                    key={index}\n                    url={`https://www.youtube.com/watch?v=${video.key}`}\n                    controls\n                    width=\"480px\"\n                    height=\"320px\"\n                  />\n                ))}\n              </Videos>\n            </Tab>\n          )}\n          {result.seasons && result.seasons.length > 0 && (\n            <Section title=\"Seasons\">\n              {result.seasons.map((season, index) => (\n                <PosterSeason\n                  key={index}\n                  title={season.name}\n                  year={season.air_date && season.air_date.substring(0, 4)}\n                  imageUrl={season.poster_path}\n                />\n              ))}\n            </Section>\n          )}\n          {result.belongs_to_collection && (\n            <Section title=\"Collection\">\n              <PosterToCollection\n                id={result.belongs_to_collection.id}\n                key={result.belongs_to_collection.id}\n                title={result.belongs_to_collection.name}\n                imageUrl={result.belongs_to_collection.poster_path}\n              />\n            </Section>\n          )}\n        </Data>\n      </Content>\n      <TitlePut\n        title={\n          result.title\n            ? (document.title = result.title)\n            : (document.title = result.name)\n        }\n      ></TitlePut>\n    </Container>\n  );\n};\n\nexport default Detail;\n","import styled from \"styled-components\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { moviesApi } from \"api\";\nimport Loader from \"Components/Loader\";\nimport TitlePut from \"Components/TitlePut\";\nimport Section from \"Components/Section\";\nimport { Poster } from \"Components/Poster\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  background-image: url(${(props) => props.bgImage});\n  background-size: 100%;\n  width: 30%;\n  height: auto;\n  border-radius: 15px;\n  :hover {\n    opacity: 0.5;\n    transition: opacity 0.2s ease-in-out;\n  }\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  display: flex;\n  justify-content: space-between;\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\nconst Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.8;\n  line-height: 1.5;\n  width: 100%;\n  margin-bottom: 20px;\n`;\n\nexport default ({\n  match: {\n    params: { id },\n  },\n}) => {\n  const [collection, setCollection] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getCollection = async () => {\n      try {\n        const { data: collection } = await moviesApi.collection(id);\n        setCollection(collection);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCollection();\n  }, []);\n  return loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original/${collection.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={`https://image.tmdb.org/t/p/original/${collection.poster_path}`}\n        />\n        <Data>\n          <Title>{collection.name}</Title>\n          <Overview>{collection.overview}</Overview>\n          <Section title=\"Series\">\n            {collection.parts &&\n              collection.parts.map((part, index) => (\n                <Poster\n                  key={index}\n                  id={part.id}\n                  imageUrl={part.poster_path}\n                  title={part.title}\n                  rating={part.vote_average}\n                  year={part.release_date && part.release_date.substring(0, 4)}\n                  isMovie={true}\n                />\n              ))}\n          </Section>\n        </Data>\n      </Content>\n      <TitlePut title={collection.name} />\n    </Container>\n  );\n};\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\nimport Collection from \"Routes/Collection\";\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Route path=\"/collection/:id\" component={Collection} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n\n/*\n    니코는  <Router>태그 사이에 <></> 넣어주었음\n    : router can have only one child...\n    오류난다면 추가해볼 것\n    */\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset}\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        color:rgb(255,255,255);\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20,20,20);\n        padding-top:50px;\n    }\n    div{\n        &::-webkit-scrollbar {\n            display: none;\n        }\n    }\n`;\n\nexport default GlobalStyles;\n","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nconst App = () => {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}