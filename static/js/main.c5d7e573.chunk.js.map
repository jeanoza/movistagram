{"version":3,"sources":["api.js","Components/Loader.js","Components/Section.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","encodeURIComponent","tvApi","Container","styled","div","role","aria-label","Title","span","Grid","Section","title","children","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","isMovie","to","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","vote_average","release_date","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","componentDidMount","a","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Content","Cover","bgImage","Data","h3","ItemContainer","Divider","Overview","p","Backdrop","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","match","push","history","parsedId","parseInt","isNaN","includes","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5d7e573.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"efe03a6d3db809fae4ff34eeb880e298\",\n    language: \"fr-FR\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\n//axios, append_to_response부분 , encodeURIComponent...더 공부할 것\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title> {title} </Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  font-weight: 600;\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}> {text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 5px;\n  background-position: center center;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.1s ease-in-out;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : \"https://www.lakeshorechamber.org/wp-content/uploads/2018/07/Photo-Not-Available.png\"\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 17 ? `${title.substring(0, 17)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  position: absolute;\n  width: 100%;\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Movistagram</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {\" \"}\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {\" \"}\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {\" \"}\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#ee5253\" text={error} />}\n      </Container>\n    )}\n  </>\n);\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch {\n      this.setState({ error: \"Can't find Movies informations\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Movistagram</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Today Airing Shows\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#ee5253\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport { tvApi } from \"api\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  componentDidMount = async () => {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({ error: \"Can't now find TV informations\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import Message from \"Components/Message\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Poster from \"Components/Poster\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  width: 100%;\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  //for delete all decorations in input tag.\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Movistagram</title>\n    </Helmet>\n    {\n      <Container>\n        <Form onSubmit={handleSubmit}>\n          <Input\n            placeholder=\"Search Movies or TV Shows...\"\n            value={searchTerm}\n            onChange={updateTerm}\n          />\n        </Form>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            {movieResults && movieResults.length > 0 && (\n              <Section title=\"Movie Results\">\n                {movieResults.map((movie) => (\n                  <Poster\n                    key={movie.id}\n                    id={movie.id}\n                    title={movie.title}\n                    imageUrl={movie.poster_path}\n                    rating={movie.vote_average}\n                    year={\n                      movie.release_date && movie.release_date.substring(0, 4)\n                    }\n                    isMovie={true}\n                  />\n                ))}\n              </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n              <Section title=\"TV Show Results\">\n                {tvResults.map((show) => (\n                  <Poster\n                    key={show.id}\n                    id={show.id}\n                    title={show.name}\n                    imageUrl={show.poster_path}\n                    rating={show.vote_average}\n                    year={\n                      show.first_air_date && show.first_air_date.substring(0, 4)\n                    }\n                  />\n                ))}\n              </Section>\n            )}\n            {error && <Message color=\"#ee5253\" text={error} />}\n            {tvResults &&\n              movieResults &&\n              tvResults.length === 0 &&\n              movieResults.length === 0 && (\n                <Message text=\"Nothing found\" color=\"#8395a7\" />\n              )}\n          </>\n        )}\n      </Container>\n    }\n  </>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  //event.prede...없이 해볼것\n  //최초에 엔터시 event.preventDefault() 없이도 submit & page change 않았음\n  //없이 해도 잘 동작... 왜??!\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  z-index: 10;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0px 20px;\n\n  background-color: rgba(20, 20, 20, 0.8);\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst Main = styled.div`\n  font-size: 28px;\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\nconst Item = styled.li`\n  width: 100px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${(props) => (props.current ? \"#ff0000\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\nconst SLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    {/* <Main>Movistagram</Main> */}\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst Cover = styled.div`\n  background-image: url(${(props) => props.bgImage});\n  background-size: cover;\n  background-position: center center;\n  width: 50%;\n  height: 80%;\n  border-radius: 15px;\n`;\n\nconst Data = styled.div`\n  width: 50%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.8;\n  line-height: 1.5;\n  width: 100%;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n`;\n\nconst DetailPresenter = ({ result, error, loading, isMovie }) =>\n  loading ? (\n    <>\n      <Loader />\n      <Helmet>\n        <title>Loading...</title>\n      </Helmet>\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.title ? result.title : result.name}</title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\n              : \"https://www.lakeshorechamber.org/wp-content/uploads/2018/07/Photo-Not-Available.png\"\n          }\n        />\n        <Data>\n          <Title>{result.title ? result.title : result.name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>#</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time} min\n            </Item>\n            <Divider>#</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  error: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n};\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n  componentDidMount = async () => {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  };\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        {/* <Route path=\"/tv/popular\" render={()=><h1>Popular</h1>}/> */}\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n  /*\n    니코는  <Router>태그 사이에 <></> 넣어주었음\n    : router can have only one child...\n    오류난다면 추가해볼 것\n    */\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset}\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        color:rgb(255,255,255);\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20,20,20,1);\n        padding-top:50px;\n    }\n`;\n\nexport default GlobalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}